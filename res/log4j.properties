#appender : 로깅을 남길 장소
#layout : 로깅 패턴(형식)
# log4j.properties
 
# 기본 로깅등급은 INFO , appender로 표준출력과 rolling 을 사용함.
log4j.rootLogger=INFO, stdout, rolling                      


# Console output...
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.Target=System.out
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=%5p %C{1}.%M:%L - %m%n  
# 로깅등급 클래스명.메소드명:라인수 - 메시지

log4j.appender.rolling=org.apache.log4j.DailyRollingFileAppender
log4j.appender.rolling.File=c:/temp/wchart.log
log4j.appender.rolling.DatePattern='.'yyyy-MM-dd
#log4j.appender.rolling.Threshold=INFO
log4j.appender.rolling.layout=org.apache.log4j.PatternLayout
log4j.appender.rolling.layout.ConversionPattern=[%d] %-5p %l - %m%n
log4j.appender.rolling.Append=true

# SqlMap logging configuration...
# 패키지 자체에 로깅을 걸고 싶을때
log4j.logger.java.sql.Connection=DEBUG, rolling
log4j.logger.java.sql.Statement=DEBUG, rolling                       
log4j.logger.java.sql.PreparedStatement=DEBUG, rolling
# ResultSet  
log4j.logger.java.sql.ResultSet=DEBUG, rolling                           
# resultSet은 거치는 단계가 많아 로깅이 너무 많다.

